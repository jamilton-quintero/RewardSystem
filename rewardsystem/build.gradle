allprojects {
	repositories {
		mavenCentral()
	}

	project.ext.log4j = ["org.apache.logging.log4j:log4j-api:2.17.0"]
	project.ext.apachecommons = [
			"commons-io:commons-io:2.6",
			"org.apache.commons:commons-lang3:3.7"
	]

	tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
	tasks.withType(Test) { systemProperty "file.encoding", "UTF-8" }

	project.ext.junit5 = ["org.junit.jupiter:junit-jupiter:5.7.1"]
	project.ext.mockito = ['org.mockito:mockito-core:2.22.0']


	project.ext.springbootjpa = ["org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"]
	project.ext.springboottest = ["org.springframework.boot:spring-boot-starter-test:${springBootVersion}"]
	project.ext.springbootweb = ["org.springframework.boot:spring-boot-starter-web:${springBootVersion}"]
	project.ext.springdevtools = ["org.springframework.boot:spring-boot-devtools:${springBootVersion}"]
	project.ext.actuator = ["org.springframework.boot:spring-boot-actuator:${springBootVersion}"]
	project.ext.actuatorstarter = ["org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"]
	project.ext.springbootundertow = ["org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"]
	project.ext.springbootjasypt = ['com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1']
	project.ext.ulisesbocchio = ["com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4"]

	project.ext.springsecurity = ["org.springframework.boot:spring-boot-starter-security:${springBootVersion}"]

	project.ext.lombok = ["org.projectlombok:lombok:1.18.20"]

	project.ext.mapstruct = ["org.mapstruct:mapstruct:1.5.5.Final"]
	project.ext.mapstructprocessor = ["org.mapstruct:mapstruct-processor:1.5.5.Final"]



	project.ext.jakarta = ["jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"]
	project.ext.glassfish = [ "org.glassfish.jaxb:jaxb-runtime:2.3.2"]

	project.ext.springtxt = [
			"org.springframework:spring-tx:${springVersion}",
			"org.springframework:spring-context:${springVersion}"
	]

	/*project.ext.swagger = [
			"io.springfox:springfox-boot-starter:3.0.0",
			"io.springfox:springfox-swagger-ui:3.0.0",
			"io.springfox:springfox-swagger2:3.0.0"
	]*/

	project.ext.db = ["mysql:mysql-connector-java:8.0.30"]

	project.ext.flyway = ["org.flywaydb:flyway-core:5.2.1"]
	project.ext.flywaytest = ["org.flywaydb.flyway-test-extensions:flyway-spring-test:5.2.1"]

	project.ext.h2 = ["com.h2database:h2:1.4.194"]
	project.ext.aop = ["org.springframework.boot:spring-boot-starter-aop:2.5.0"]

	project.ext.jwtapi = ["io.jsonwebtoken:jjwt-api:0.11.2"]
	project.ext.jwtimpl = ["io.jsonwebtoken:jjwt-impl:0.11.2"]
	project.ext.jwtjackson = ["io.jsonwebtoken:jjwt-jackson:0.11.2"]
	project.ext.archunit=["com.tngtech.archunit:archunit-junit5:0.23.1"]
}

buildscript {
	repositories {

		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.0')
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'eclipse'

group = 'com.jamiltonquintero'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {

	configurations {
		runtime.exclude module: 'spring-boot-starter-tomcat'
		compile.exclude module: 'spring-boot-starter-tomcat'
	}

	compile project.ext.springbootweb

	runtimeOnly project.ext.springdevtools

	implementation project.ext.springbootundertow
	implementation project.ext.flyway
	implementation project.ext.actuator
	implementation project.ext.actuatorstarter
	implementation project.ext.log4j

	testImplementation project.ext.archunit
	testImplementation project.ext.junit5

	implementation project(':infraestructure')
}


springBoot {
	mainClass = 'com.jamiltonquintero.RewardsystemApplication'
}

eclipse {
	classpath {
		downloadSources=true
	}
}

test {
	systemProperty "spring.profiles.active", System.properties['spring.profiles.active']

	useJUnitPlatform()

	if (project.hasProperty('excludeTests')) {
		exclude project.property('excludeTests')
	}
}

